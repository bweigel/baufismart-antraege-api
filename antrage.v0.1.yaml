swagger: "2.0"
info:
  description: |
    Eine API zum Auslesen von Daten aus BaufiSmart & Co.
  title: 'Anträge auslesen API'
  version: 0.0.1
  contact:
      name: "Europace AG"
      url: "www.europace2.de"
      email: "helpdesk@europace.de"
schemes:
- http
- https
produces:
- application/json
consumes:
- application/json

# Pfade und Ressourcen
paths:
  /antraege:
    get:
      summary: alle Anträge seitenweise abrufen
      description: |
        Es werden alle Anträge ausgeliefert, die der authentifizierten
        Partner sehen darf. Offen: Sortierung, Pagination, Filterung
      operationId: getAntraege
      parameters:
        - name: page
          in: query
          description: Nummer der anzuzeigenden Seite.
          type: integer
          required: false
          default: 0
        - name: pageSize
          in: query
          description: Anzahl der anzuzeigenden Anträge
          type: integer
          required: false
          minimum: 1
          maximum: 20
          default: 10

      responses:
        200:
          description: Erfolgreiche Antwort
          schema:
            type: array
            items:
              $ref: "#/definitions/Antrag"
        default:
          description: unspezifizierter Fehler
          schema:
            $ref: '#/definitions/FehlerAntwort'

  /antraege/{antragsId}:
    get:
      summary: einen Antrag abrufen
      description: |
        Ein Antrag wird über seine zweiteilige Nummer ermittelt. Der Antrag
        ist mit '/' getrennt und muss hierfür mit '-' geschrieben werden.Die Antragsnummer
        nach dem Muster 'AB1234/1' muss zu 'AB1234-1' geändert werden.
      operationId: getAntrag
      parameters:
        - name: antragsId
          in: path
          description: Id des Antrags
          required: true
          type: string

      responses:
        200:
          description: Erfolgreiche Antwort
          schema:
            $ref: "#/definitions/Antrag"
        default:
          description: unspezifizierter Fehler
          schema:
            $ref: '#/definitions/FehlerAntwort'

# Objektdefinitionen
definitions:
  Antrag:
    type: object
    properties:
      id:
        type: string
        description: Antragsnummer
      erzeugungsZeitpunkt:
        type: string
        format: date-time
        description: Zeitpunkt der Angebotserzeugung
      produktAnbieter:
        $ref: '#/definitions/ProduktAnbieter'
      kreditSachbearbeiter:
        $ref: '#/definitions/Partner'
      kundenBetreuer:
        $ref: '#/definitions/Partner'
      datenKontext:
        $ref: '#/definitions/DatenKontext'
      kreditEntscheidungsInformation:
        $ref: '#/definitions/Href'
      antragsteller:
        type: array
          items:
          $ref: "#/definitions/Antragsteller"

  Antragsteller:
    properties:
      id:
        type: string
      anrede:
        type: string
        enum:
          - Herr
          - Frau
      vorname:
        type: string
      nachname:
        type: string
      email:
        type: string
      telefonnummer:
        type: string
        description: Telefonnummer formatiert nach DIN 5008
      geburtsdatum:
        type: string
        format: date
      anschrift:
        $ref: "#/definitions/Postadresse"
      wohnhaftSeit:
        type: string
        format: date
      vorAnschrift:
        $ref: "#/definitions/Postadresse"
      familienstand:
        type: string
        enum:
          - VERWITWET
          - LEBENSPARTNERSCHAFT
          - GESCHIEDEN
          - GETRENNT_LEBEND
          - LEDIG

  # Basic Types
  Href:
    type: object
    properties:
      name:
        type: string
        description: Name der Resource
      url:
        type: string
        format: uri
      mediaType:
        type: string
        description: |
          Media type der Resource: https://tools.ietf.org/html/rfc2045

  Postadresse:
    type: object
    properties:
      strasse:
        type: string
      hausnummer:
        type: string
      postleitzahl:
        type: string
      ort:
        type: string


  Partner:
    type: object
    properties:
      vorname:
        type: string
      nachname:
        type: string
      email:
        type: string
      partnerId:
        $ref: '#/definitions/PartnerId'

  PartnerId:
    type: string
    description: |
      Die ID eines Partners im Europace2 System

  ProduktAnbieter:
    type: object
    properties:
      produktAnbieterId:
        type: string
        description: Eindeutige ID des Produktanbieters
      name:
        type: string
        description: Name des Produktanbieters

  DatenKontext:
    description: Echtgeschäft oder Testumgebung?
    type: string
    enum:
      - TEST_UMGEBUNG
      - ECHT_GESCHAEFT

  # Error Response
  FehlerAntwort:
    type: object
    required:
      - error
    properties:
      error:
        type: object
        required:
          - message
        properties:
          code:
            type: integer
          message:
            type: string
